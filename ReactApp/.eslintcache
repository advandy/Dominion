[{"C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\ui\\JoinForm.js":"1","C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\ui\\Gameboard.js":"2","C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\reportWebVitals.js":"3","C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\index.js":"4","C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\App.js":"5","C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\ui\\Player.js":"6"},{"size":1747,"mtime":1607007448596,"results":"7","hashOfConfig":"8"},{"size":1938,"mtime":1607008417154,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1606381925689,"results":"10","hashOfConfig":"8"},{"size":459,"mtime":1606469883077,"results":"11","hashOfConfig":"8"},{"size":634,"mtime":1607076046489,"results":"12","hashOfConfig":"8"},{"size":8615,"mtime":1607357729029,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1dazaxe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\ui\\JoinForm.js",["28","29"],"import React from 'react';\r\nexport default class JoinForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.socket = props.socket;\r\n      this.state = {value: '', submitted: false, started: false};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.socket.on(\"joined\", (msg) => {\r\n         \r\n      });\r\n      this.socket.on(\"game\", () => {\r\n        this.setState({started: true})\r\n      })\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      if (!!this.state.value) {\r\n        this.socket.emit('joined', this.state.value);\r\n        this.setState({submitted: true});\r\n      }\r\n      event.preventDefault();\r\n    }\r\n\r\n    startGame = (event) =>{\r\n      this.socket.emit(\"start\");\r\n      this.setState({started: true});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.started) {\r\n          return <a>Welcome {this.state.value}, Game started!</a>\r\n        } else if (this.state.submitted && !this.state.started) {\r\n            return (\r\n                <div> \r\n                  <a>Welcome {this.state.value}</a>\r\n                  <button onClick={this.startGame}>Start Game</button>\r\n                </div>\r\n              )\r\n        } else {\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <label>\r\n                    Name:\r\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                  </label>\r\n                  <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n              );\r\n        }\r\n    }\r\n  }","C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\ui\\Gameboard.js",["30","31","32"],"import React from 'react';\r\nexport default class Gameboard extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.socket = props.socket;\r\n      this.state = {cards: null};\r\n      this.STACK = [\r\n          \"Copper\", \"Silver\", \"Gold\", \r\n          \"Estate\", \"Duchy\", \"Province\", \r\n          \"Cellar\",\"Chapel\",\r\n          \"Village\", \"Woodcutter\", \"Workshop\",\r\n          \"Militia\", \"Remodel\", \"Smithy\",\r\n          \"Market\", \"Mine\"\r\n      ]\r\n      this.socket.on(\"broadcast\", (payload) => {\r\n        this.setState({cards: payload.gameStack})\r\n      });\r\n    }\r\n    \r\n    handleBuy = (event) => {\r\n        const card_name = event.currentTarget.getAttribute(\"data\");\r\n        this.socket.emit(\"game\", {event: \"buy\", payload: card_name})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.cards) {\r\n            return(\r\n                <div style={{position: \"fixed\", width: \"55%\", left:\"22.5%\"}}>\r\n                    {\r\n                        this.STACK.map((card_name) => {\r\n                            let cards = this.state.cards[card_name].cards;\r\n                            let size = cards.length;\r\n                            return (<div style={{position: \"relative\", width: \"12.5%\", display: \"inline-flex\"}}>\r\n                                <a> <img style={{height: \"170px\"}} src={\"img/\" + card_name +\".jpg\"}></img></a>\r\n                                <a style={{borderRadius: \"25%\", color: \"white\", background: \"red\", width: \"20px\", height: \"25px\", marginLeft: \"-7px\"}} class=\"card_count\"> {size} </a>\r\n                                <button style={{borderRadius: \"25%\",marginLeft: \"-22px\", marginTop: \"150px\"}} data={card_name} onClick={this.handleBuy}>+</button>                        \r\n                            </div>)\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        } else {\r\n            return <p>Game not started yet</p>\r\n        }\r\n    }\r\n}","C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\reportWebVitals.js",[],"C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\index.js",[],"C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\App.js",[],"C:\\Users\\D060753\\Documents\\Projects\\Dominion\\ReactApp\\src\\ui\\Player.js",["33","34","35","36","37","38","39"],{"ruleId":"40","severity":1,"message":"41","line":38,"column":18,"nodeType":"42","endLine":38,"endColumn":21},{"ruleId":"40","severity":1,"message":"41","line":42,"column":19,"nodeType":"42","endLine":42,"endColumn":22},{"ruleId":"40","severity":1,"message":"41","line":34,"column":33,"nodeType":"42","endLine":34,"endColumn":36},{"ruleId":"43","severity":1,"message":"44","line":34,"column":37,"nodeType":"42","endLine":34,"endColumn":101},{"ruleId":"40","severity":1,"message":"41","line":35,"column":33,"nodeType":"42","endLine":35,"endColumn":171},{"ruleId":"45","severity":1,"message":"46","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"41","line":185,"column":32,"nodeType":"42","endLine":185,"endColumn":35},{"ruleId":"43","severity":1,"message":"44","line":185,"column":35,"nodeType":"42","endLine":185,"endColumn":129},{"ruleId":"40","severity":1,"message":"41","line":202,"column":36,"nodeType":"42","endLine":202,"endColumn":39},{"ruleId":"43","severity":1,"message":"44","line":202,"column":39,"nodeType":"42","endLine":202,"endColumn":187},{"ruleId":"40","severity":1,"message":"41","line":204,"column":36,"nodeType":"42","endLine":204,"endColumn":39},{"ruleId":"43","severity":1,"message":"44","line":204,"column":39,"nodeType":"42","endLine":204,"endColumn":160},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'timingSafeEqual' is defined but never used.","Identifier","unusedVar"]